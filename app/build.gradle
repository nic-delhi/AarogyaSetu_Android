apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

ext {
    sslPublicKey = keystoreProperties['ssl_public_key']
    sslBackupKey = keystoreProperties['ssl_backup_key']
    sslAuthKey = keystoreProperties['ssl_auth_key']
    sslAuthBackupKey = keystoreProperties['ssl_auth_backup_key']
    platformKey = keystoreProperties['platform_key']
    androidAlias = keystoreProperties['android_alias']
    androidKeystore = keystoreProperties['android_keystore']
    transformation = keystoreProperties['transformation']
    awsApiKey = keystoreProperties['aws_api_key']
    serviceUUID = keystoreProperties['service_uuid']
    didUUID = keystoreProperties['did_uuid']
    pingerUUID = keystoreProperties['pinger_uuid']
    authAlias = keystoreProperties['auth_alias']
}

android {
    compileSdkVersion Integer.parseInt(project.APP_COMPILE_SDK_VERSION)
    buildToolsVersion project.APP_BUILD_TOOL_VERSION

    signingConfigs {
        release {
            storeFile file(keystoreProperties['key_store_cetificate'])
            storePassword keystoreProperties['key_store_password']
            keyAlias keystoreProperties['key_alias']
            keyPassword keystoreProperties['key_password']
        }
    }

    defaultConfig {
        buildConfigField "String", "AUTH_ALIAS", "\"${authAlias}\""
        buildConfigField "String", "DID_UUID", "\"${didUUID}\""
        buildConfigField "String", "PINGER_UUID", "\"${pingerUUID}\""
        buildConfigField "String", "SERVICE_UUID", "\"${serviceUUID}\""
        buildConfigField "String", "SSL_PUBLIC_KEY", "\"${sslPublicKey}\""
        buildConfigField "String", "SSL_BACKUP_KEY", "\"${sslBackupKey}\""
        buildConfigField "String", "SSL_AUTH_KEY", "\"${sslAuthKey}\""
        buildConfigField "String", "SSL_AUTH_BACKUP_KEY", "\"${sslAuthBackupKey}\""
        buildConfigField "String", "PLATFORM_KEY", "\"${platformKey}\""
        buildConfigField "String", "ALIAS", "\"${androidAlias}\""
        buildConfigField "String", "KEYSTORE", "\"${androidKeystore}\""
        buildConfigField "String", "TRANSFORMATION", "\"${transformation}\""
        buildConfigField "String", "AWS_API_KEY", "\"${awsApiKey}\""
        buildConfigField "String", "WEB_URL", "\"${keystoreProperties['webview_url']}\""
        buildConfigField "String", "WEB_HOST", "\"${keystoreProperties['webview_host']}\""
        buildConfigField "String", "HOST_URL", "\"${keystoreProperties['app_host_url']}\""
        buildConfigField "String", "AUTH_HOST_URL", "\"${keystoreProperties['auth_host_url']}\""

        buildConfigField "String", "QR_PUBLIC_KEY_API", "\"${keystoreProperties['fetch_qr_public_key_api']}\""
        buildConfigField "String", "QR_CODE_API", "\"${keystoreProperties['fetch_qr_api']}\""
        buildConfigField "String", "BULK_UPLOAD_API", "\"${keystoreProperties['bulk_upload_api']}\""
        buildConfigField "String", "REGISTER_USER_API", "\"${keystoreProperties['register_user_api']}\""
        buildConfigField "String", "CHECK_STATUS_API", "\"${keystoreProperties['check_status_api']}\""
        buildConfigField "String", "FCM_TOKEN_API", "\"${keystoreProperties['update_fcm_token_api']}\""
        buildConfigField "String", "CONFIG_API", "\"${keystoreProperties['fetch_config_api']}\""
        buildConfigField "String", "GENERATE_OTP_API", "\"${keystoreProperties['generate_otp_api']}\""
        buildConfigField "String", "VALIDATE_OTP_API", "\"${keystoreProperties['validate_otp_api']}\""
        buildConfigField "String", "REFRESH_TOKEN_API", "\"${keystoreProperties['refresh_auth_token_api']}\""

        buildConfigField "String", "CALL_US_URL", "\"${keystoreProperties['call_us_url']}\""
        buildConfigField "String", "FAQ_URL", "\"${keystoreProperties['faq_url']}\""
        buildConfigField "String", "PRIVACY_POLICY_URL", "\"${keystoreProperties['privacy_policy_url']}\""
        buildConfigField "String", "TNC_URL", "\"${keystoreProperties['tnc_url']}\""
        buildConfigField "String", "VERIFY_APP_URL", "\"${keystoreProperties['verify_app_url']}\""


        applicationId "nic.goi.aarogyasetu"
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.APP_VERSION_CODE)
        versionName project.APP_VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }


    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {

    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha03'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
   
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "com.google.android.material:material:1.2.0-alpha05"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "androidx.work:work-runtime:2.3.4"

    implementation 'com.squareup.retrofit2:retrofit:2.8.1'// compulsory

    implementation 'com.squareup.retrofit2:converter-gson:2.8.1' //for retrofit conversion

    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'fr.avianey.com.viewpagerindicator:library:2.4.1.1@aar'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.3'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-analytics-ktx:17.3.0'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.4.0'

    implementation "androidx.security:security-crypto:1.0.0-beta01"

    //Firebase remote config
    implementation 'com.google.firebase:firebase-config:19.1.3'

    implementation "com.google.android.play:core:1.6.0"
    implementation 'com.journeyapps:zxing-android-embedded:3.3.0'

    // Testing dependencies
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.2.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "com.google.truth:truth:0.42"
    testImplementation "junit:junit:4.12"

    api 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.1') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }
}
apply plugin: 'com.google.gms.google-services'
